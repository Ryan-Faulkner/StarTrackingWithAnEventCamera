
package net.sf.jaer.util;

import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;

import javax.swing.JFrame;

/**
 * Shows an Exception in a dialog.  No longer used.
 * @author  tobi
 * @version $Revision: 1.6 $
 */
public class ExceptionDialog extends javax.swing.JDialog {
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    
    /** Creates new form ExceptionDialog */
    public ExceptionDialog(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    /** construct a new ExceptionDialog.
     @param e Exception 
     @param modal is the dialog modal. <code>true</code> means other windows are not active until this one is closed. 
     <code>false</code> means other windows can be active.
     @param summary a string to show at top of dialog that summarizes exception
     */
    public ExceptionDialog(JFrame parent, boolean modal, Exception e, String summary){
        this(parent, modal);
        exceptionSummaryTextField.setText(summary);
//        exceptionTextArea.setText(e.getMessage());
//        exceptionTextArea.append("\n");
        OutputStream os=new ByteArrayOutputStream();
        PrintStream pw=new PrintStream(os,true);  
        e.printStackTrace(pw);
//        System.out.println("pw.toString="+pw.toString());
//        System.out.println("os.toString="+os.toString());
        exceptionTextArea.append(os.toString());
    }
    
//    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
//    public int getReturnStatus() {
//        return returnStatus;
//    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        exeptionSummaryPanel = new javax.swing.JPanel();
        exceptionSummaryTextField = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        exceptionTextAreaPanel = new javax.swing.JPanel();
        exceptionTextAreaScrollPane = new javax.swing.JScrollPane();
        exceptionTextArea = new javax.swing.JTextArea();

        setTitle("Exception");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        okButton.setText("Close");
        okButton.setToolTipText("Dismiss this dialog");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(okButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        exceptionSummaryTextField.setFont(new java.awt.Font("Dialog", 1, 14));
        exceptionSummaryTextField.setLabelFor(exceptionTextAreaScrollPane);
        exceptionSummaryTextField.setText("Exception");
        exeptionSummaryPanel.add(exceptionSummaryTextField);

        jPanel1.add(exeptionSummaryPanel);

        jPanel1.add(jSeparator1);

        exceptionTextAreaScrollPane.setViewportBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        exceptionTextArea.setColumns(80);
        exceptionTextArea.setEditable(false);
        exceptionTextArea.setFont(new java.awt.Font("Courier New", 0, 12));
        exceptionTextArea.setRows(8);
        exceptionTextArea.setTabSize(3);
        exceptionTextArea.setToolTipText("Shows the exception");
        exceptionTextAreaScrollPane.setViewportView(exceptionTextArea);

        exceptionTextAreaPanel.add(exceptionTextAreaScrollPane);

        jPanel1.add(exceptionTextAreaPanel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed
        
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane exceptionTextAreaScrollPane;
    private javax.swing.JPanel exceptionTextAreaPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel exceptionSummaryTextField;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel exeptionSummaryPanel;
    private javax.swing.JTextArea exceptionTextArea;
    // End of variables declaration//GEN-END:variables
    
    private int returnStatus = RET_CANCEL;
}
