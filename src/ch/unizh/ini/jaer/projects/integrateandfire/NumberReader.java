/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NumberReader.java
 *
 * Created on May 10, 2011, 3:04:33 PM
 */

package ch.unizh.ini.jaer.projects.integrateandfire;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.swing.JLabel;
import javax.swing.JProgressBar;

/**
 *
 * @author tobi
 */
public class NumberReader extends Plotter implements ActionListener{

    
    

    Controller c;         // Controller Object

    boolean enable=true;
    //UnitProbe[] P=new UnitProbe[0];

    ArrayList<MiniProbe> miniProbes;
    class MiniProbe
    {
        JProgressBar hP;
        Network.Unit N;
        JLabel lab;
        public float lastmem;
        
        public MiniProbe(int N_, JProgressBar J_, JLabel L_)
        {   init(N_, J_, L_);
        }
        
        final void init(int N_, JProgressBar J_, JLabel L_)
        {   N=NN.getUnit(N_);
            hP=J_;     
            lab=L_;
            
            lab.setText("#"+N_+": '"+N.getName()+"'");
        }
        
        void update(float scalefac,int timestamp)
        {   if (radioVM.isSelected())
            {    lastmem=N.getVsig(timestamp);
                 hP.setValue((int) (100/(1+Math.exp(-lastmem*scalefac))));
            }
            else
            {   // TODO: Generalize to non-binary firing rates 
                lastmem=N.getAsig();
                 hP.setValue((int) (100*lastmem));
            }
            
        }
        
    }
    
    
    
    List<Probe> P = new ArrayList<Probe>(0);

    void NumberPlot(LIFNet NN_){load(NN_);}
    
    @Override public void init()
    {
        enable=false;
        
        buttonGroupSig.add(radioVM);
        buttonGroupSig.add(radioFR);
        radioVM.setSelected(true);
        
        // Make a list of links connecting neurons to their nets.
        miniProbes=new ArrayList<MiniProbe>();
        JProgressBar[] jbars={jBar1,jBar2,jBar3,jBar4,jBar5,jBar6,jBar7,jBar8,jBar9,jBar0};
        JLabel[] jlabs={jLabel1,jLabel2,jLabel3,jLabel4,jLabel5,jLabel6,jLabel7,jLabel8,jLabel9,jLabel10};
        for (int i=0; i<10; i++)
            miniProbes.add(new MiniProbe(NN.nUnits()-10+i,jbars[i],jlabs[i]));
            
        this.setVisible(true);
        this.jSlider.setValue(10);
        
        this.pushProbe.addActionListener(this);
        this.pushControl.addActionListener(this);

        this.setTitle("Network "+this.currentNet);
        
        comboNet.removeAllItems();
        for (int i=0;i<NA.N.length;i++)
        {    comboNet.addItem("Network "+i);
        }
        
        enable=true;
    }
    
    @Override
    void refresh() {
        init();
    }

    @Override public void update(int timestamp)
    {
        if (!enable)
            return;
        
        // Prevent top layer from firing
        float[] vout=new float[10];
               
        // Update all values
        String maxlab="?";
        float vmax=Float.NEGATIVE_INFINITY;
        float scalefac=(float) (jSlider.getValue()) /100;
        for (MiniProbe m:miniProbes)
        {   m.update(scalefac,timestamp);
            if (m.lastmem>vmax)
            {   vmax=m.lastmem;
                maxlab=m.N.getName();                
            }
        }
        
        // Decide on the number
        if (vmax>0)
            this.jResult.setText("" + maxlab);
        else 
            this.jResult.setText("?");
                
        Iterator<Probe> Pit = P.iterator();
	while (Pit.hasNext()) {
            Pit.next().update(timestamp);
	}

    }

    @Override public void actionPerformed(ActionEvent e) {
        if (e.getSource()==this.pushProbe)
        {   Probe p=new Probe();
            p.load(NN);
            p.init();
            P.add(p);
        }
        else if (e.getSource()==this.pushControl)
        {    c=new Controller();
             c.load(NN);
             c.init();
        }
    }


    
    
    
    /** Creates new form NumberReader */
    public NumberReader() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSig = new javax.swing.ButtonGroup();
        jBar1 = new javax.swing.JProgressBar();
        jBar2 = new javax.swing.JProgressBar();
        jBar4 = new javax.swing.JProgressBar();
        jBar3 = new javax.swing.JProgressBar();
        jBar6 = new javax.swing.JProgressBar();
        jBar5 = new javax.swing.JProgressBar();
        jBar7 = new javax.swing.JProgressBar();
        jBar8 = new javax.swing.JProgressBar();
        jBar0 = new javax.swing.JProgressBar();
        jBar9 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSlider = new javax.swing.JSlider();
        jLabel11 = new javax.swing.JLabel();
        jResult = new javax.swing.JTextField();
        pushProbe = new javax.swing.JButton();
        pushControl = new javax.swing.JButton();
        pushRefresh = new javax.swing.JButton();
        comboNet = new javax.swing.JComboBox();
        radioVM = new javax.swing.JRadioButton();
        radioFR = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("-");

        jLabel2.setText("-");

        jLabel3.setText("-");

        jLabel4.setText("-");

        jLabel5.setText("-");

        jLabel6.setText("-");

        jLabel7.setText("-");

        jLabel8.setText("-");

        jLabel9.setText("-");

        jLabel10.setText("-");

        jLabel11.setText("Sensitivity");

        jResult.setFont(new java.awt.Font("Tahoma", 0, 36));
        jResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jResultActionPerformed(evt);
            }
        });

        pushProbe.setText("Probe");

        pushControl.setText("Control");
        pushControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pushControlActionPerformed(evt);
            }
        });

        pushRefresh.setText("Refresh");
        pushRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pushRefreshActionPerformed(evt);
            }
        });

        comboNet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboNet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNetActionPerformed(evt);
            }
        });

        radioVM.setText("Membrane Voltage");

        radioFR.setText("Firing Rate");
        radioFR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboNet, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioVM)
                            .addComponent(radioFR))))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pushProbe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pushControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jResult, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(141, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBar9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBar0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBar8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBar7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(141, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(pushRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pushRefresh)
                        .addGap(4, 4, 4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboNet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBar7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBar8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBar9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jBar0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jResult, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pushControl)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(pushProbe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioVM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioFR)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jResultActionPerformed

    private void pushControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pushControlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pushControlActionPerformed

    private void pushRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pushRefreshActionPerformed
        refresh();
    }//GEN-LAST:event_pushRefreshActionPerformed

    private void comboNetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNetActionPerformed
        // TODO add your handling code here:
        
        setCurrentNet(comboNet.getSelectedIndex());
        
    }//GEN-LAST:event_comboNetActionPerformed

    private void radioFRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioFRActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NumberReader().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupSig;
    private javax.swing.JComboBox comboNet;
    public javax.swing.JProgressBar jBar0;
    public javax.swing.JProgressBar jBar1;
    public javax.swing.JProgressBar jBar2;
    public javax.swing.JProgressBar jBar3;
    public javax.swing.JProgressBar jBar4;
    public javax.swing.JProgressBar jBar5;
    public javax.swing.JProgressBar jBar6;
    public javax.swing.JProgressBar jBar7;
    public javax.swing.JProgressBar jBar8;
    public javax.swing.JProgressBar jBar9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JTextField jResult;
    public javax.swing.JSlider jSlider;
    public javax.swing.JButton pushControl;
    public javax.swing.JButton pushProbe;
    public javax.swing.JButton pushRefresh;
    private javax.swing.JRadioButton radioFR;
    private javax.swing.JRadioButton radioVM;
    // End of variables declaration//GEN-END:variables

}
