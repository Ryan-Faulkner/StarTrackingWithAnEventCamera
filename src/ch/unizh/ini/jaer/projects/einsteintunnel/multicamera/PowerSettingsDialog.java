/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PowerSettings.java
 *
 * Created on Feb 2, 2011, 11:23:23 AM
 */

package ch.unizh.ini.jaer.projects.einsteintunnel.multicamera;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JTextArea;


/**
 *
 * @author Johnfn
 */
public class PowerSettingsDialog extends javax.swing.JDialog {

	public int sendPort = 75;
	public int receivePort = 77;
	public String answer;

	private String localhost; // "localhost"
	private String powerSupplyIP = "192.168.1.40";
	private String adminPassword = "admin";
	private String adminUser = "admin";
	private InetSocketAddress powerSupplySocketAddress;
	private DatagramSocket outputSocket = null;
	private JTextArea showSettingsArea;

	private MultiUDPNetworkDVS128Camera camera = null;

    /** Creates new form PowerSettings */
    public PowerSettingsDialog(java.awt.Frame parent, boolean modal, MultiUDPNetworkDVS128Camera camera){
		super(parent, modal);
        this.camera = camera;
        initComponents();
		showSettingsArea = new JTextArea();
		showSettingsArea.setEditable(false);
		showSettingPane.add(showSettingsArea);
	}

	public void sendShowSettings(){
		String s = "wer da?\r\n";
		try {
			sendString(s);
			DatagramSocket serverSocket = new DatagramSocket(receivePort);
			serverSocket.setSoTimeout(100);
			byte[] receiveData = new byte[1024];
			DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
			serverSocket.receive(receivePacket);
			answer = new String(receivePacket.getData());
			System.out.println("RECEIVED: " + answer);
			showSettingsArea.append(answer);
		} catch (SocketException ex) {
			Logger.getLogger(PowerSettingsDialog.class.getName()).log(Level.SEVERE, null, ex);
		} catch (UnknownHostException ex) {
			Logger.getLogger(PowerSettingsDialog.class.getName()).log(Level.SEVERE, null, ex);
		} catch (IOException ex) {
			Logger.getLogger(PowerSettingsDialog.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	public void sendNewSettings() {
		String s;
		if(onRadioButton.isSelected()){
			s = "Sw_on"+supplyNumberSpinner.getValue()+adminUser+adminPassword+"\r\n";
		}else{
			s = "Sw_off"+supplyNumberSpinner.getValue()+adminUser+adminPassword+"\r\n";
		}
		try {
			sendString(s);
		} catch (SocketException ex) {
			Logger.getLogger(PowerSettingsDialog.class.getName()).log(Level.SEVERE, null, ex);
		} catch (UnknownHostException ex) {
			Logger.getLogger(PowerSettingsDialog.class.getName()).log(Level.SEVERE, null, ex);
		} catch (IOException ex) {
			Logger.getLogger(PowerSettingsDialog.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	private void sendString(String s) throws SocketException, UnknownHostException, IOException{
		showSettingsArea.append("Send: "+s+"\r\n");
		outputSocket = new DatagramSocket(sendPort);
		outputSocket.setSoTimeout(100);
		byte[] b = s.getBytes();
		InetAddress IPAddress =  InetAddress.getByName(powerSupplyIP);
		powerSupplySocketAddress = new InetSocketAddress(IPAddress,sendPort);
		DatagramPacket d = new DatagramPacket(b,b.length,powerSupplySocketAddress);
		if (outputSocket != null){
		    outputSocket.send(d);
		    outputSocket.close();
		}
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        showSettingsButton = new javax.swing.JButton();
        showSettingPane = new java.awt.ScrollPane();
        jLabel1 = new javax.swing.JLabel();
        onRadioButton = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        supplyNumberSpinner = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setTitle("Power Settings");

        showSettingsButton.setText("Show Settings");
        showSettingsButton.setActionCommand("showSettings");
        showSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showSettingsActionPerformed(evt);
            }
        });

        jLabel1.setText("Power Supply Settings");

        onRadioButton.setSelected(true);
        onRadioButton.setText("ON");
        onRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onRadioButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Set");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setSettingsActionPerformed(evt);
            }
        });

        supplyNumberSpinner.setModel(new javax.swing.SpinnerNumberModel());

        jLabel4.setText("Supply Nr.");

        jButton1.setText("Reboot");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rebootButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(showSettingPane, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                        .addGap(29, 29, 29)
                        .addComponent(showSettingsButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(supplyNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(onRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showSettingsButton)
                    .addComponent(showSettingPane, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(onRadioButton)
                    .addComponent(jButton2)
                    .addComponent(supplyNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        onRadioButton.getAccessibleContext().setAccessibleName("onRadioButton");
        jButton2.getAccessibleContext().setAccessibleName("setSettings");
        supplyNumberSpinner.getAccessibleContext().setAccessibleName("supplyNumberSpinner");

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void showSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showSettingsActionPerformed
		sendShowSettings();
	}//GEN-LAST:event_showSettingsActionPerformed

	private void setSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setSettingsActionPerformed
		sendNewSettings();
	}//GEN-LAST:event_setSettingsActionPerformed

	private void onRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onRadioButtonActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_onRadioButtonActionPerformed

	private void rebootButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rebootButtonActionPerformed
	try {
	    Runtime.getRuntime().exec("cmd /c start C:/reboot.bat");
	} catch (IOException ex) {
	    Logger.getLogger(PowerSettingsDialog.class.getName()).log(Level.SEVERE, null, ex);
	}
	}//GEN-LAST:event_rebootButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton onRadioButton;
    private java.awt.ScrollPane showSettingPane;
    private javax.swing.JButton showSettingsButton;
    private javax.swing.JSpinner supplyNumberSpinner;
    // End of variables declaration//GEN-END:variables

}
