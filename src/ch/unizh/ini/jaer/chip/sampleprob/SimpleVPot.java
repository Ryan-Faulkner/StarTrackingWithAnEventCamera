/*
 * VPot.java
 *
 * Created on November 19, 2006, 9:19 AM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 *
 *
 * Copyright November 19, 2006 Tobi Delbruck, Inst. of Neuroinformatics, UNI-ETH Zurich
 */
package ch.unizh.ini.jaer.chip.sampleprob;

import java.awt.Component;

import javax.swing.BoxLayout;
import javax.swing.JComponent;
import javax.swing.JPanel;

import net.sf.jaer.biasgen.PotGUIControl;
import net.sf.jaer.biasgen.VDAC.DAC;
import net.sf.jaer.biasgen.VDAC.VPot;
import net.sf.jaer.chip.Chip;

/**
 * Describes a voltage bias, controlled by a voltage that is generated by a voltage DAC. Used for off-chip voltage DACs
 * for older chips that
 * do not have integrated IPots. A DAC may have an internal reference voltage that results in clipping of the output
 * values to Vdd. For example, if the DAC
 * is running on a 3.3V supply and uses an internal 2.5V reference and also has a gain-of-2 buffer its full scale output
 * would be 5V, but of course the value
 * is clipped to 3.3V.
 *
 * @author tobi
 */
public class SimpleVPot extends VPot {
	public SimpleVPot(Chip chip, String name, DAC dac, int channel, Type type, Sex sex, int bitValue, int displayPosition,
		String tooltipString) {
		super(chip, name, dac, channel, type, sex, bitValue, displayPosition, tooltipString);
	}

	@Override
	public JComponent makeGUIPotControl() {
		return new SimpleVPotGUIControl(this);
	}

	private class SimpleVPotGUIControl extends JPanel {
		private static final long serialVersionUID = 3628189197050703155L;

		SimpleVPotSliderTextControl sliderTextControl = null;
		PotGUIControl generalControls = null;

		/** Creates a new instance of IPotGUIControl */
		public SimpleVPotGUIControl(final VPot pot) {
			setLayout(new BoxLayout(this, BoxLayout.X_AXIS));
			setAlignmentX(Component.LEFT_ALIGNMENT);
			generalControls = new PotGUIControl(pot);
			sliderTextControl = new SimpleVPotSliderTextControl(pot);
			generalControls.getSliderAndValuePanel().add(sliderTextControl);
			add(generalControls);
			revalidate();
		}
	}
}
