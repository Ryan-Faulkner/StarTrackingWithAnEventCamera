<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="org.bytedeco"
		module="javacpp-presets"
		revision="1.4"
		status="release"
		publication="20180116231245"
	>
		<license name="Apache License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0" />
		<license name="GNU General Public License (GPL) version 2, or any later version" url="http://www.gnu.org/licenses/" />
		<license name="GPLv2 with Classpath exception" url="http://www.gnu.org/software/classpath/license.html" />
		<description homepage="http://bytedeco.org/javacpp-presets/">
		The missing bridge between Java and native C++ libraries
		</description>
		<m:properties__javacpp.platform.root/>
		<m:properties__javacpp.platform.ios-arm>ios-arm</m:properties__javacpp.platform.ios-arm>
		<m:properties__javacpp.platform.linux-ppc64le>linux-ppc64le</m:properties__javacpp.platform.linux-ppc64le>
		<m:properties__javacpp.parser.skip>false</m:properties__javacpp.parser.skip>
		<m:properties__javacpp.platform.macosx-x86_64>macosx-x86_64</m:properties__javacpp.platform.macosx-x86_64>
		<m:properties__javacpp.moduleId>${project.artifactId}</m:properties__javacpp.moduleId>
		<m:properties__javacpp.platform.ios-x86>ios-x86</m:properties__javacpp.platform.ios-x86>
		<m:properties__javacpp.platform.android-x86>android-x86</m:properties__javacpp.platform.android-x86>
		<m:properties__javacpp.platform.linux-x86>linux-x86</m:properties__javacpp.platform.linux-x86>
		<m:properties__javacpp.platform.extension/>
		<m:properties__javacpp.platform.android-arm64>android-arm64</m:properties__javacpp.platform.android-arm64>
		<m:properties__javacpp.platform.android-arm>android-arm</m:properties__javacpp.platform.android-arm>
		<m:properties__javacpp.cppbuild.skip>false</m:properties__javacpp.cppbuild.skip>
		<m:properties__javacpp.platform.linux-x86_64>linux-x86_64</m:properties__javacpp.platform.linux-x86_64>
		<m:properties__javacpp.platform.windows-x86>windows-x86</m:properties__javacpp.platform.windows-x86>
		<m:properties__javacpp.compiler.skip>false</m:properties__javacpp.compiler.skip>
		<m:properties__javacpp.platform.linux-armhf>linux-armhf</m:properties__javacpp.platform.linux-armhf>
		<m:properties__javacpp.platform.linux-arm64>linux-arm64</m:properties__javacpp.platform.linux-arm64>
		<m:properties__javacpp.platform.android-x86_64>android-x86_64</m:properties__javacpp.platform.android-x86_64>
		<m:properties__javacpp.platform.compiler/>
		<m:properties__javacpp.platform.ios-arm64>ios-arm64</m:properties__javacpp.platform.ios-arm64>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__javacpp.platform.windows-x86_64>windows-x86_64</m:properties__javacpp.platform.windows-x86_64>
		<m:properties__javacpp.platform.ios-x86_64>ios-x86_64</m:properties__javacpp.platform.ios-x86_64>
		<m:dependency.management__org.bytedeco__javacpp__version>1.4</m:dependency.management__org.bytedeco__javacpp__version>
		<m:maven.plugins>null__maven-deploy-plugin__2.8.2|org.sonatype.plugins__nexus-staging-maven-plugin__1.6.6</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
	</publications>
</ivy-module>
