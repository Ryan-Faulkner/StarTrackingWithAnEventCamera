<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.5" maxVersion="1.6" type="org.netbeans.modules.form.forminfo.JPanelFormInfo">
  <Properties>
    <Property name="name" type="java.lang.String" value="CochleaAMS1bControlPanel" noResource="true"/>
  </Properties>
  <Events>
    <EventHandler event="ancestorAdded" listener="javax.swing.event.AncestorListener" parameters="javax.swing.event.AncestorEvent" handler="formAncestorAdded"/>
  </Events>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,2,34,0,0,2,-52"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
    <Property name="columns" type="int" value="1"/>
    <Property name="rows" type="int" value="0"/>
  </Layout>
  <SubComponents>
    <Component class="javax.swing.JLabel" name="jLabel1">
      <Properties>
        <Property name="text" type="java.lang.String" value="&lt;html&gt;This panel allows &quot;tweaking&quot; bias values around the nominal ones loaded from the XML file. Change made here are &lt;b&gt;not&lt;/b&gt; permanent until the settings are saved to an XML file. On restart, these new settings will then become the nominal settings."/>
      </Properties>
    </Component>
    <Component class="net.sf.jaer.biasgen.PotTweaker" name="Vbias1Tweaker">
      <Properties>
        <Property name="lessDescription" type="java.lang.String" value="Lower Frequency Cut off"/>
        <Property name="moreDescription" type="java.lang.String" value="Higher Frequency Cut off"/>
        <Property name="name" type="java.lang.String" value="Vbias1" noResource="true"/>
        <Property name="tweakDescription" type="java.lang.String" value="Adjusts the High Frequency cut off"/>
      </Properties>
      <Events>
        <EventHandler event="stateChanged" listener="javax.swing.event.ChangeListener" parameters="javax.swing.event.ChangeEvent" handler="Vbias1TweakerStateChanged"/>
      </Events>
    </Component>
    <Component class="net.sf.jaer.biasgen.PotTweaker" name="Vbias2Tweaker">
      <Properties>
        <Property name="lessDescription" type="java.lang.String" value="Lower Frequency Cut off"/>
        <Property name="moreDescription" type="java.lang.String" value="Higher Frequency Cut off"/>
        <Property name="name" type="java.lang.String" value="Vbias2" noResource="true"/>
        <Property name="tweakDescription" type="java.lang.String" value="Adjusts the Low Frequency cut off"/>
      </Properties>
      <Events>
        <EventHandler event="stateChanged" listener="javax.swing.event.ChangeListener" parameters="javax.swing.event.ChangeEvent" handler="Vbias2TweakerStateChanged"/>
      </Events>
    </Component>
    <Component class="net.sf.jaer.biasgen.PotTweaker" name="VqTweaker">
      <Properties>
        <Property name="lessDescription" type="java.lang.String" value="wider, less events"/>
        <Property name="moreDescription" type="java.lang.String" value="narrower, more events"/>
        <Property name="name" type="java.lang.String" value="Vq" noResource="true"/>
        <Property name="tweakDescription" type="java.lang.String" value="Adjusts Q of filter - dependent on Vtau"/>
      </Properties>
      <Events>
        <EventHandler event="stateChanged" listener="javax.swing.event.ChangeListener" parameters="javax.swing.event.ChangeEvent" handler="VqTweakerStateChanged"/>
      </Events>
    </Component>
    <Component class="net.sf.jaer.biasgen.PotTweaker" name="NeuronVLeakTweaker">
      <Properties>
        <Property name="lessDescription" type="java.lang.String" value="Less events"/>
        <Property name="moreDescription" type="java.lang.String" value="More events"/>
        <Property name="name" type="java.lang.String" value="NeuronVLeak" noResource="true"/>
        <Property name="tweakDescription" type="java.lang.String" value="Adjusts leak current to neuron"/>
      </Properties>
      <Events>
        <EventHandler event="stateChanged" listener="javax.swing.event.ChangeListener" parameters="javax.swing.event.ChangeEvent" handler="NeuronVLeakTweakerStateChanged"/>
      </Events>
    </Component>
    <Component class="net.sf.jaer.biasgen.PotTweaker" name="VgainTweaker">
      <Properties>
        <Property name="lessDescription" type="java.lang.String" value="Less gain, less events"/>
        <Property name="moreDescription" type="java.lang.String" value="More gain, more events"/>
        <Property name="name" type="java.lang.String" value="Vgain" noResource="true"/>
        <Property name="tweakDescription" type="java.lang.String" value="Adjusts input current to neuron"/>
      </Properties>
      <Events>
        <EventHandler event="stateChanged" listener="javax.swing.event.ChangeListener" parameters="javax.swing.event.ChangeEvent" handler="VgainTweakerStateChanged"/>
      </Events>
    </Component>
    <Component class="javax.swing.JButton" name="ResetBasic">
      <Properties>
        <Property name="text" type="java.lang.String" value="Recalculate sliders scaling factors; use after load/save new biases"/>
        <Property name="toolTipText" type="java.lang.String" value="Recalculates the sliders scaling factors. Use after saving or loading new biases"/>
        <Property name="maximumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[73, 15]"/>
        </Property>
        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[73, 15]"/>
        </Property>
      </Properties>
      <Events>
        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="ResetBasicActionPerformed"/>
      </Events>
    </Component>
  </SubComponents>
</Form>
